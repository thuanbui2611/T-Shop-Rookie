@using T_Shop.Client.MVC.Helpers.Constants
@using T_Shop.Shared.ViewModels.TransactionPage
@model TransactionVM
@{
    int currentPage = Model.PaginationMetaData.CurrentPage;
    int totalPageCount = Model.PaginationMetaData.TotalPageCount;
    int visiblePageCount = 7;
}

<div class="row">
    <div class="col-lg-12">
        <div class="">
            <div class="input-group w-25  d-flex">
                <input type="search" class="form-control p-3" placeholder="keywords" aria-describedby="search-icon-1">
                <span id="search-icon-1" class="input-group-text p-3"><i class="fa fa-search"></i></span>
            </div>
            <div class="table-responsive" id="transactionList">
                <table class="table project-list-table table-nowrap align-middle table-borderless">
                    <thead>
                        <tr>
                            <th scope="col">ID</th>
                            <th scope="col">Total Items</th>
                            <th scope="col">Total Payment</th>
                            <th scope="col">Date</th>
                            <th scope="col">Status</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var transaction in Model.Transactions)
                        {
                            <tr class="hover-onClick" onclick="location.href='@Url.Action("details", "myorder", new { id = transaction.ID })'">
                                <td style="color: #146cd9">@transaction.ID</td>
                                <td style="color: black">@transaction.Order.OrderDetails.Count()</td>
                                <td class="text-success fw-bold" >
                                    @{
                                        decimal totalAmount = 0;
                                        foreach (var order in transaction.Order.OrderDetails)
                                        {
                                            totalAmount += order.Quantity * order.Price;
                                        }
                                    }
                                    $@totalAmount.ToString("N0")
                                </td>
                                <td style="color: black">@transaction.CreatedAt.ToLocalTime()</td>
                                <td class="@("d-inline-block px-2 py-1 my-2 fw-bold rounded-pill") @(transaction.Status == TransactionConstants.PENDING ? "bg-pending text-primary" :
                                  transaction.Status == TransactionConstants.COMPLETED ? "bg-success text-success" :
                                  transaction.Status == TransactionConstants.CANCELED ? "bg-deny text-danger" :
                                  "bg-ongoing text-warning"
                                )">
                                    @transaction.Status
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
<div class="pagination d-flex justify-content-center mt-3">
    @if (currentPage > 1)
    {
        <a href="javascript:void(0);" class="rounded" onclick="paginationTransactionList('@(currentPage - 1)')"> &laquo; </a>
    }

    @if (totalPageCount <= visiblePageCount)
    {
        for (int i = 1; i <= totalPageCount; i++)
        {
            if (i == currentPage)
            {
                <a href="javascript:void(0);" class="active rounded">@i</a>
            }
            else
            {
                <a href="javascript:void(0);" class="rounded" onclick="paginationTransactionList('@i')">@i</a>
            }
        }
    }
    else
    {
        int startPage = Math.Max(1, currentPage - (visiblePageCount / 2));
        int endPage = Math.Min(startPage + visiblePageCount - 1, totalPageCount);

        if (startPage > 1)
        {
            <a href="javascript:void(0);" class="rounded" onclick="paginationTransactionList('1')">1</a>
            if (startPage > 2)
            {
                <span class="rounded">...</span>
            }
        }

        for (int i = startPage; i <= endPage; i++)
        {
            if (i == currentPage)
            {
                <a href="javascript:void(0);" class="active rounded">@i</a>
            }
            else
            {
                <a href="javascript:void(0);" class="rounded" onclick="paginationTransactionList('@i')">@i</a>
            }
        }

        if (endPage < totalPageCount)
        {
            if (endPage < totalPageCount - 1)
            {
                <span class="rounded">...</span>
            }
            <a href="javascript:void(0);" class="rounded" onclick="paginationTransactionList('@totalPageCount')">@totalPageCount</a>
        }
    }

    @if (currentPage < totalPageCount)
    {
        <a href="javascript:void(0);" class="rounded" onclick="paginationTransactionList('@(currentPage + 1)')"> &raquo; </a>
    }
</div>