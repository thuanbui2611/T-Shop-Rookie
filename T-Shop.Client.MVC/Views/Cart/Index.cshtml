@{
    @using T_Shop.Shared.DTOs.Cart.ResponseModel
    @model CartResponseModel
}

<!-- Single Page Header start -->
<div class="container-fluid page-header py-5">
    <h1 class="text-center text-white display-6">Cart</h1>
    <ol class="breadcrumb justify-content-center mb-0">
        <li class="breadcrumb-item"><a href="#">Home</a></li>
        <li class="breadcrumb-item"><a href="#">Pages</a></li>
        <li class="breadcrumb-item active text-white">Cart</li>
    </ol>
</div>
<!-- Single Page Header End -->
<!-- Cart Page Start -->
<div class="container-fluid py-5">
    <div class="container py-5">
        <div class="table-responsive">
            <table class="table" id="cart-table">
                <thead>
                    <tr>
                        <th scope="col">Products</th>
                        <th scope="col">Price</th>
                        <th scope="col">Quantity</th>
                        <th scope="col">Total</th>
                        <th scope="col">Action</th>
                    </tr>
                </thead>
                <tbody>
                   @if(Model == null)
                    {
                        <div>Cart Empty!</div>
                    } else
                    {
                        @foreach (var item in Model.CartItems)
                        {
                            <tr>
                                <th scope="row">
                                    <div class="d-flex align-items-center">
                                        <img src="@item.Product.Images.Find(i => i.isMain).imageUrl" class="img-fluid me-5 rounded-circle" style="width: 80px; height: 80px;" alt="Image product">
                                    </div>
                                </th>
                                <td>
                                    <p class="mb-0 mt-4 text-success">@item.Product.Price</p>
                                </td>
                                <td>
                                    <div class="input-group mt-4" style="width: 100px;">
                                        <div class="input-group-btn">
                                            <button class="btn btn-sm btn-minus rounded-circle bg-light border">
                                                <i class="fa fa-minus"></i>
                                            </button>
                                        </div>
                                        <input type="text" class="form-control form-control-sm text-center border-0 quantity-input" 
                                        value="@item.Quantity" data-item-id="@item.Product.Id" data-original-quantity="@item.Quantity">
                                        <div class="input-group-btn">
                                            <button class="btn btn-sm btn-plus rounded-circle bg-light border">
                                                <i class="fa fa-plus"></i>
                                            </button>
                                        </div>
                                    </div>
                                </td>
                                <td>
                                    <p class="mb-0 mt-4 text-success">
                                        @{
                                            var totalPrice = item.Quantity * item.Product.Price;
                                        }
                                        @totalPrice
                                    </p>
                                </td>
                                <td id="actionFields_@item.Product.Id">
                          @*           <button class="btn btn-md rounded-circle bg-light border mt-4 save-change-button" name="saveChange" data-product-id="@item.Product.Id">
                                        <i class="fa fa-times text-success"></i>
                                    </button> *@
                                    <button class="btn btn-md rounded-circle bg-light border mt-4 delete-item" name="removeItem" data-product-id="@item.Product.Id">
                                        <i class="fa fa-times text-danger"></i>
                                    </button>
                                </td>

                            </tr>
                        }
                    }
                   
                </tbody>
            </table>
        </div>
        <div class="mt-5">
            <input type="text" class="border-0 border-bottom rounded me-5 py-3 mb-4" placeholder="Coupon Code">
            <button class="btn border-secondary rounded-pill px-4 py-3 text-primary" type="button">Apply Coupon</button>
        </div>
        <div class="row g-4 justify-content-end">
            <div class="col-8"></div>
            <div class="col-sm-8 col-md-7 col-lg-6 col-xl-4">
                <div class="bg-light rounded">
                    <div class="p-4">
                        <h1 class="display-6 mb-4">Cart <span class="fw-normal">Total</span></h1>
                        <div class="d-flex justify-content-between mb-4">
                            <h5 class="mb-0 me-4">Subtotal:</h5>
                            <p class="mb-0">$96.00</p>
                        </div>
                        <div class="d-flex justify-content-between">
                            <h5 class="mb-0 me-4">Shipping</h5>
                            <div class="">
                                <p class="mb-0">Flat rate: $3.00</p>
                            </div>
                        </div>
                        <p class="mb-0 text-end">Shipping to Ukraine.</p>
                    </div>
                    <div class="py-4 mb-4 border-top border-bottom d-flex justify-content-between">
                        <h5 class="mb-0 ps-4 me-4">Total</h5>
                        <p class="mb-0 pe-4">$99.00</p>
                    </div>
                    <button class="btn border-secondary rounded-pill px-4 py-3 text-primary text-uppercase mb-4 ms-4" type="button">Proceed Checkout</button>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Cart Page End -->
@section Scripts{

 @* <cache expires-after="" *@

    <script>
        // Function to handle quantity change
        $(document).on('input', '.quantity-input', handleQuantityChange);
        // Event handlers for plus buttons
        $(document).on('click', '.btn-minus', function () {
            var input = $(this).closest('.input-group').find('.quantity-input');
            var currentQuantity = parseInt(input.val());

            if (currentQuantity > 1) {
                input.val(currentQuantity - 1).trigger('input');
                handleQuantityChange.call(input);
            }
        });
        // Event handlers for plus buttons
        $(document).on('click', '.btn-plus', function () {
            var input = $(this).closest('.input-group').find('.quantity-input');
            var currentQuantity = parseInt(input.val());

            input.val(currentQuantity + 1).trigger('input');
            handleQuantityChange.call(input);
        });

        function handleQuantityChange() {
            var input = $(this);
            var actionFields = input.closest('tr').find('[id^="actionFields_"]');
            var originalQuantity = parseInt(input.data('original-quantity'));
            var currentQuantity = parseInt(input.val());
            debugger;
            var saveChangeButton = actionFields.find('.save-change-button');

            if (currentQuantity != originalQuantity) {
                if (saveChangeButton.length == 0) {
                    var productId = input.data('item-id');
                    var saveChangeButtonHtml = '<button class="btn btn-md rounded-circle bg-light border mt-4 save-change-button" name="saveChange" data-product-id="' + productId + '"><i class="fa fa-times text-success"></i></button>';
                    actionFields.append(saveChangeButtonHtml);
                }
            } else {
                saveChangeButton.remove();
            }
        }
        // Event handler for saveChange button
        $(document).on('click', '.save-change-button', function () {
            var productId = $(this).data('product-id');
            var quantity = $(this).closest('tr').find('input').val();

            $.ajax({
                url: '/Cart/UpdateCartItem',
                type: 'PUT',
                data: { productId: productId, quantity: quantity },
                success: function (response) {
                    // Fetch the updated content of the CartController index page
                    alert("Update cart success");
                    $.ajax({
                        url: '/Cart',
                        type: 'GET',
                        success: function (data) {
                            // Extract the cart item rows from the fetched HTML content
                            var cartItems = $(data).find('#cart-table tbody').html();

                            // Replace the existing cart item rows with the updated content
                            $('#cart-table tbody').html(cartItems);
                        },
                        error: function (xhr, status, error) {
                            // Handle the error response, if needed
                            console.log('Error loading cart page: ' + error);
                        }
                    });

                    console.log('Cart item edited successfully');
                },
                error: function (xhr, status, error) {
                    // Handle the error response, if needed
                    console.log('Error editing cart item: ' + error);
                }
            });
        });
        //Delete item
        $(document).ready(function () {
            $(document).on('click', '.delete-item', function (e) {
                e.preventDefault();
                var productId = $(this).data('product-id');

                $.ajax({
                    url: '/Cart/DeleteCartItem',
                    type: 'DELETE',
                    data: { productId: productId },
                    success: function (response) {
                        // Handle the success response, if needed
                        if(response === true)
                        {
                            alert("Item deleted successfully")
                            // Fetch the updated content of the CartController index page
                            $.ajax({
                                url: '/Cart',
                                type: 'GET',
                                success: function (data) {
                                    // Extract the cart item rows from the fetched HTML content
                                    var cartItems = $(data).find('#cart-table tbody').html();

                                    // Replace the existing cart item rows with the updated content
                                    $('#cart-table tbody').html(cartItems);

                                },
                                error: function (xhr, status, error) {
                                    // Handle the error response, if needed
                                    console.log('Error loading cart page: ' + error);
                                }
                            });
                        } else {

                            alert("Item failed successfully")
                        }
                    },
                    error: function (xhr, status, error) {
                        // Handle the error response, if needed
                        alert("Item deleted failed")
                        console.log('Error deleting item: ' + error);
                    }
                });
            });
        });
    </script>
}