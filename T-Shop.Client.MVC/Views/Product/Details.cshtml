@using T_Shop.Client.MVC.Helpers
@using T_Shop.Shared.DTOs.Product.ResponseModel

@model ProductResponseModel
@{
    var ratingDetails = ViewBag.RatingDetails as List<RatingHelper.RatingDetail>;
}

<style>
    * {
        box-sizing: border-box;
    }

    .row > .column {
        padding: 0 8px;
    }

    .row:after {
        content: "";
        display: table;
        clear: both;
    }

    .column {
        float: left;
        width: 25%;
    }

    /* The Carousel (background) */
    .carousel {
        display: block;
        position: relative;
        z-index: 1;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
    }

    /* Carousel Content */
    .carousel-content {
        position: relative;
        /* background-color: white; */

        height: fit-content;
        margin: auto;
        padding: 0;
        width: 90%;
        max-width: 1200px;
    }

    /* The Close Button */
    .close {
        color: white;
        position: absolute;
        top: 10px;
        right: 25px;
        font-size: 35px;
        font-weight: bold;
    }

        .close:hover,
        .close:focus {
            color: #999;
            text-decoration: none;
            cursor: pointer;
        }

    .mySlides {
        display: none;
    }

    .cursor {
        cursor: pointer;
    }

    /* Next & previous buttons */
    .prev,
    .next {
        cursor: pointer;
        position: absolute;
        top: 35%;
        width: auto;
        padding: 16px;
        color: black;
        font-weight: bold;
        font-size: 20px;
        transition: 0.3s ease;
        border-radius: 0 3px 3px 0;
        user-select: none;
        -webkit-user-select: none;
        background-color: #f3f3f3;
        opacity: 0.7
    }

    /* Position the "next button" to the right */
    .next {
        right: 0;
        border-radius: 3px 0 0 3px;
    }

        /* On hover, add a black background color with a little bit see-through */
        .prev:hover,
        .next:hover {
            opacity: 1
        }

    img {
        margin-bottom: -4px;
    }

    .demo {
        opacity: 0.8;
    }

        .active,
        .demo:hover {
            opacity: 1;
        }

    img.hover-shadow {
        transition: 0.3s;
    }

    .hover-shadow:hover {
        box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
    }

</style>

<!-- Modal Search Start -->
<div class="modal fade" id="searchModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-fullscreen">
        <div class="modal-content rounded-0">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Search by keyword</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body d-flex align-items-center">
                <div class="input-group w-75 mx-auto d-flex">
                    <input type="search" class="form-control p-3" placeholder="keywords" aria-describedby="search-icon-1">
                    <span id="search-icon-1" class="input-group-text p-3"><i class="fa fa-search"></i></span>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Modal Search End -->
<!-- Single Page Header start -->
<div class="container-fluid page-header py-5">
    <h1 class="text-center text-white display-6">Shop Detail</h1>
    <ol class="breadcrumb justify-content-center mb-0">
        <li class="breadcrumb-item"><a href="#">Home</a></li>
        <li class="breadcrumb-item"><a href="#">Pages</a></li>
        <li class="breadcrumb-item active text-white">Shop Detail</li>
    </ol>
</div>
<!-- Single Page Header End -->

<!-- Single Product Start -->
<div class="container-fluid py-5">
    <div class="container-xxl py-5">
        <div class="row g-4 mb-5 p-5 shadow rounded" style="background-color: #f3f4f6">
            <div class="row g-4">
                <div class="col-lg-7">
                    @* Images carousel *@
                    <div class="carousel rounded-xl">
                        <div class="carousel-content">
                            <div class="relative">
                                @for (int i = 0; i < Model.Images.Count; i++)
                                {
                                    <a href="@Model.Images[i].imageUrl" class="mySlides image-products border" style="display: @(i == 0 ? "block" : "none")">
                                        <img src="@Model.Images[i].imageUrl" class="object-fit-cover shadow-xl h-100 rounded-2" style="width: 100%" />
                                    </a>
                                }

                                @if (Model.Images.Count > 1)
                                {
                                    <a class="prev border-white" onclick="plusSlides(-1)">
                                        <svg width="20px" height="20px" fill="#000000" version="1.1" baseProfile="tiny" xmlns="http://www.w3.org/2000/svg" xmlnsXlink="http://www.w3.org/1999/xlink" viewBox="0 0 42 42" xmlSpace="preserve" stroke="#000000" transform="rotate(180)">
                                            <polygon fillRule="evenodd" points="13.933,1 34,21.068 14.431,40.637 9.498,35.704 24.136,21.068 9,5.933 "></polygon>
                                        </svg>
                                    </a>
                                    <a class="next border-white" onclick="plusSlides(1)">
                                        <svg width="20px" height="20px" fill="#000000" version="1.1" baseProfile="tiny" xmlns="http://ns.adobe.com/AdobeSVGViewerExtensions/3.0/" viewBox="0 0 42 42" xmlSpace="preserve" stroke="#000000">
                                            <polygon fillRule="evenodd" points="13.933,1 34,21.068 14.431,40.637 9.498,35.704 24.136,21.068 9,5.933 "></polygon>
                                        </svg>
                                    </a>
                                }
                            </div>

                            <div class="row justify-start flex item-center mt-5 h-24">
                                @for (int i = 0; i < Model.Images.Count; i++)
                                {
                                    <div class="column border rounded-2">
                                        <img class="demo cursor h-full object-cover" src="@Model.Images[i].imageUrl" style="width: 100%" onclick="currentSlide(@(i + 1))" />
                                    </div>
                                }
                            </div>
                        </div>
                    </div>

                </div>
                <div class="col-lg-5">
                    <div class="flex-column d-flex gap-2">
                        <h3 class="fw-bold mb-2" style="color: black">@Model.Name</h3>
                        <div class="d-flex mb-2 rating-list" style="justify-content: left; align-content: center">
                            <p style="font-size: 28px; margin: 0 0 0 0; margin-right: 4px; color: #ffc73a">@Model.Rating</p>
                            @if (ratingDetails != null)
                            {
                                foreach (var detail in ratingDetails)
                                {
                                    <svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" style="width: 35px; height: 35px">
                                        <defs>
                                            @{
                                                var idLinear = "colorGradient" + detail.Key;
                                                var idFill = "#colorGradient" + detail.Key;
                                            }
                                            <linearGradient id=@idLinear
                                                            x1="0" y1="0" x2="1" y2="0">
                                                <stop offset="@detail.PercentageColor" stop-color="#ffc73a" />
                                                <stop offset="@detail.PercentageColor2" stop-color="#ffffff" />
                                            </linearGradient>
                                        </defs>
                                        <path d="M12,17.27L18.18,21L16.54,13.97L22,9.24L14.81,8.62L12,2L9.19,8.62L2,9.24L7.45,13.97L5.82,21L12,17.27Z"
                                              pathLength="360" fill="url(@idFill)"></path>
                                    </svg>
                                }
                            }
                            <span class="align-content-center">@Model.totalReviews Reviews</span>

                        </div>
                        <h4 class="fw-bold mb-2 text-success">@Model.Price.ToString("N0") $</h4>
                        <h6 class=" mb-3" style="color:black">On Stock: @Model.Quantity </h6>
                        <div class="d-flex gap-3">
                            <button class="btn border border-secondary rounded-pill px-4 py-2 text-primary add-to-cart-button" data-product-id="@Model.Id">
                                <i class="fa fa-shopping-bag me-2 text-primary"></i> Add to cart
                            </button>
                            <a href="#" class="btn border border-secondary rounded-pill px-4 py-2 text-primary"><i class="fa fa-shopping-bag me-2 text-primary"></i> Buy Now</a>
                        </div>
                    </div>


                </div>


                @* Description *@
                <div class="col-lg-12">
                    <nav>
                        <div class="nav nav-tabs mb-3">
                            <button class="nav-link active border-white border-bottom-0 fw-bold" type="button" role="tab"
                                    id="nav-about-tab" data-bs-toggle="tab" data-bs-target="#nav-about"
                                    aria-controls="nav-about" aria-selected="true">
                                Description
                            </button>
                        </div>
                    </nav>
                    <div class="tab-content mb-5">
                        <div class="tab-pane active" id="nav-about" role="tabpanel" aria-labelledby="nav-about-tab">
                            <p style="color:black">
                                @Model.Description
                            </p>
                            <div class="px-2">
                                <div class="row g-4">
                                    <div class="col-6 shadow-sm rounded">
                                        <div class="row bg-white align-items-center text-center justify-content-center py-2 rounded-top">
                                            <h6 class="col-6" style="color:black">
                                                <p class="mb-0">Type</p>
                                            </h6>
                                            <div class="col-6" style="color:black">
                                                <p class="mb-0">@Model.Type.Name</p>
                                            </div>
                                        </div>
                                        <div class="row text-center align-items-center justify-content-center py-2">
                                            <div class="col-6">
                                                <h6 class="mb-0" style="color:black">Brand</h6>
                                            </div>
                                            <div class="col-6" style="color:black">
                                                <div class="mb-0" style="color:black">@Model.Model.Brand.Name</div>
                                            </div>
                                        </div>
                                        <div class="row bg-white text-center align-items-center justify-content-center py-2">
                                            <div class="col-6">
                                                <h6 class="mb-0" style="color:black">Model</h6>
                                            </div>
                                            <div class="col-6">
                                                <div class="mb-0" style="color:black">@Model.Model.Name</div>
                                            </div>
                                        </div>
                                        <div class="row text-center align-items-center justify-content-center py-2">
                                            <div class="col-6">
                                                <h6 class="mb-0" style="color:black">Сolor</h6>
                                            </div>
                                            <div class="col-6">
                                                <div class="mb-0" style="color:black">@Model.Color.Name</div>
                                            </div>
                                        </div>

                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        @* Reviews *@
        <div>
            <h3>Reviews (@Model.totalReviews)</h3>
            <div id="productReviewList" class="d-flex flex-column py-4 gap-4" style="width: 100%">
                @* Product Review List*@
            

            </div>
        </div>
    </div>
</div>
<!-- Single Product End -->
@section Scripts{
       <script>
        $('#productReviewList').load("/product/ProductReviewListPartial?productId=" + "@Model.Id");

        function paginationProductReviewList(pageNumber) {
            debugger;
            var params = new URLSearchParams(window.location.search);
            params.set('PageNumber', pageNumber);
            history.replaceState(null, '', '?' + params.toString());

            var url = '/product/ProductReviewListPartial?' + params.toString();
            $('#productReviewList').load(url);
        }


        // Handle Images Carousel
        let slideIndex = 1;
        showSlides(slideIndex);

        function plusSlides(n) {
            showSlides(slideIndex += n);
        }

        function currentSlide(n) {
            showSlides(slideIndex = n);
        }

        function showSlides(n) {
            let i;
            const slides = document.getElementsByClassName("mySlides");
            const dots = document.getElementsByClassName("demo");
            if (n > slides.length) { slideIndex = 1; }
            if (n < 1) { slideIndex = slides.length; }
            for (i = 0; i < slides.length; i++) {
                slides[i].style.display = "none";
            }
            for (i = 0; i < dots.length; i++) {
                dots[i].className = dots[i].className.replace(" active", "");
            }
            slides[slideIndex - 1].style.display = "block";
            if (dots.length > 0) {
                dots[slideIndex - 1].className += " active";
            }
        }

        //Handle pop up image when click (product)
        $(document).ready(function () {
            $('.image-products').magnificPopup({
                type: 'image', 
                gallery: {
                    enabled: true // Enable gallery for slideshow functionality
                },
                removalDelay: 300, // Delay removal of the popup to avoid flickering
                mainClass: 'mfp-zoom-in', // Optional: Add a CSS class for zoom-in animation
                navigateByImgClick: true, // Allow navigation by clicking on the image
                preload: [0, 1] // Preload the current and next image for faster display
                // Other options as needed (see Magnific Popup documentation)
            });
        });
      
    </script>
}