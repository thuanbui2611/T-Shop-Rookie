// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using T_Shop.Infrastructure.Persistence;

#nullable disable

namespace T_Shop.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20240423023308_productSeed")]
    partial class productSeed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.28")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("T_Shop.Domain.Entity.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("table_category", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("204c08bd-b369-4b07-b102-16bb1de763f1"),
                            Name = "Category1"
                        },
                        new
                        {
                            Id = new Guid("33665f30-e7b7-4b50-94cf-6c0ffc6b5c03"),
                            Name = "Category2"
                        });
                });

            modelBuilder.Entity("T_Shop.Domain.Entity.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uuid")
                        .HasColumnName("FK_category_id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("table_product", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("5de23157-9d10-44b6-bbba-f4b833e384a6"),
                            CategoryId = new Guid("204c08bd-b369-4b07-b102-16bb1de763f1"),
                            Description = "This is test product",
                            Name = "Product1"
                        },
                        new
                        {
                            Id = new Guid("5ce09e64-67a9-47d9-9059-9e3ad9815794"),
                            CategoryId = new Guid("33665f30-e7b7-4b50-94cf-6c0ffc6b5c03"),
                            Description = "This is test product",
                            Name = "Product2"
                        });
                });

            modelBuilder.Entity("T_Shop.Domain.Entity.Product", b =>
                {
                    b.HasOne("T_Shop.Domain.Entity.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("T_Shop.Domain.Entity.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
